

CREATE TABLE IF NOT EXISTS "public"."users" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, 
  "apellido" VARCHAR(100) NOT NULL,
  "nombre" VARCHAR(100) NOT NULL,
  "alias" VARCHAR(255) NOT NULL,
  "fecha_nacimiento" VARCHAR(255) NULL,
  "password" VARCHAR(255) NOT NULL,
  CONSTRAINT "users_pkey" PRIMARY KEY ("id"),
  CONSTRAINT "users_alias_key" UNIQUE ("alias")
);

CREATE TABLE IF NOT EXISTS "public"."posts" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  "likes" INTEGER NOT NULL DEFAULT 0,
  "fecha_publicacion" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, 
  "user_id" BIGINT NOT NULL,
  "mensaje" TEXT NOT NULL,
  CONSTRAINT "posts_pkey" PRIMARY KEY ("id"),
  CONSTRAINT "fk_posts_users" FOREIGN KEY ("user_id") REFERENCES "public"."users" ("id")
);

CREATE TABLE IF NOT EXISTS "public"."likes" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  "post_id" BIGINT NOT NULL,
  "user_id" BIGINT NOT NULL,
  CONSTRAINT "likes_pkey" PRIMARY KEY ("id"),
  CONSTRAINT "likes_user_id_post_id_key" UNIQUE ("user_id", "post_id"), 
  CONSTRAINT "fk_likes_posts" FOREIGN KEY ("post_id") REFERENCES "public"."posts" ("id"),
  CONSTRAINT "fk_likes_users" FOREIGN KEY ("user_id") REFERENCES "public"."users" ("id")
);



INSERT INTO "public"."users" ("apellido", "nombre", "alias", "fecha_nacimiento", "password")
VALUES 
('García', 'Ana', 'anita_dev', '1990-05-15', '123456'),
('Díaz', 'Bruno', 'bruno_code', '1985-03-20', '123456'),
('Celis', 'Carlos', 'carlos_ux', '1995-11-01', '123456')
ON CONFLICT (alias) DO NOTHING;


INSERT INTO "public"."posts" ("user_id", "mensaje")
VALUES
((SELECT id FROM "public"."users" WHERE alias = 'anita_dev'), '¡Hola a todos! Esta es mi primera publicación.'),
((SELECT id FROM "public"."users" WHERE alias = 'bruno_code'), 'Probando esta red social con Docker. ¡Genial!'),
((SELECT id FROM "public"."users" WHERE alias = 'carlos_ux'), 'Me gusta el diseño de esta app.')
ON CONFLICT DO NOTHING;




CREATE OR REPLACE PROCEDURE sp_crear_publicacion(
    p_user_id BIGINT,
    p_mensaje TEXT
)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO "public"."posts" (user_id, mensaje)
    VALUES (p_user_id, p_mensaje);
END;
$$;


CREATE OR REPLACE PROCEDURE sp_dar_like(
    p_user_id BIGINT,
    p_post_id BIGINT
)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO "public"."likes" (user_id, post_id)
    VALUES (p_user_id, p_post_id)
    ON CONFLICT (user_id, post_id) DO NOTHING; 

    UPDATE "public"."posts"
    SET likes = (SELECT COUNT(*) FROM "public"."likes" WHERE post_id = p_post_id)
    WHERE id = p_post_id;
END;
$$;